//
// Copyright 2016 YUNQI TECH Inc. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

syntax = "proto3";

//import "ietf-inet-types.proto";
//import "ietf-yang-types.proto";
//import "openconfig-interfaces.proto";
//import "openconfig-extensions.proto";

package proto.dhcp_relay_agent;

// Paths:
// relay-agent/dhcpv6/interfaces/interface/options/state
// relay-agent/dhcpv6/interfaces/interface/options/config
// relay-agent/dhcpv6/interfaces/interface/options
// relay-agent/dhcpv6/interfaces/interface/state/counters
// relay-agent/dhcpv6/interfaces/interface/state
// relay-agent/dhcpv6/interfaces/interface/config
// relay-agent/dhcpv6/interfaces/interface
// relay-agent/dhcpv6/interfaces
// relay-agent/dhcpv6/options/state
// relay-agent/dhcpv6/options/config
// relay-agent/dhcpv6/options
// relay-agent/dhcpv6/state
// relay-agent/dhcpv6/config
// relay-agent/dhcpv6
// relay-agent/dhcp/interfaces/interface/agent-information-option/state
// relay-agent/dhcp/interfaces/interface/agent-information-option/config
// relay-agent/dhcp/interfaces/interface/agent-information-option
// relay-agent/dhcp/interfaces/interface/state/counters
// relay-agent/dhcp/interfaces/interface/state
// relay-agent/dhcp/interfaces/interface/config
// relay-agent/dhcp/interfaces/interface
// relay-agent/dhcp/interfaces
// relay-agent/dhcp/agent-information-option/state
// relay-agent/dhcp/agent-information-option/config
// relay-agent/dhcp/agent-information-option
// relay-agent/dhcp/state
// relay-agent/dhcp/config
// relay-agent/dhcp
// relay-agent

message OptionsState {
    bool enable_interface_id = 1;
    bool enable_remote_id = 2;
    string interface_id = 3;
    string remote_id = 4;
    string sent_interface_id = 5;
    string sent_remote_id = 6;
}

message OptionsConfig {
    bool enable_interface_id = 1;
    bool enable_remote_id = 2;
    string interface_id = 3;
    string remote_id = 4;
}

message InterfaceOptions {
    OptionsConfig config = 1;
    OptionsState state = 2;
}

message StateCounters {
    uint64 total_dropped = 1;
    uint64 invalid_opcode = 2;
    uint64 invalid_options = 3;
    uint64 dhcpv6_solicit_received = 4;
    uint64 dhcpv6_decline_received = 5;
    uint64 dhcpv6_request_received = 6;
    uint64 dhcpv6_release_received = 7;
    uint64 dhcpv6_confirm_received = 8;
    uint64 dhcpv6_rebind_received = 9;
    uint64 dhcpv6_info_request_received = 10;
    uint64 dhcpv6_relay_reply_received = 11;
    uint64 dhcpv6_adverstise_sent = 12;
    uint64 dhcpv6_reply_sent = 13;
    uint64 dhcpv6_reconfigure_sent = 14;
    uint64 dhcpv6_relay_forw_sent = 15;
}

message InterfaceState {
    None id = 1;
    bool enable = 2;
    None helper_address = 3;
    StateCounters counters = 4;
}

message InterfaceConfig {
    None id = 1;
    bool enable = 2;
    None helper_address = 3;
}

message InterfacesInterface {
    InterfaceConfig config = 1;
    InterfaceState state = 2;
    InterfaceOptions options = 3;
}

message Dhcpv6Interfaces {
    repeated InterfacesInterface interface = 1;
}

message OptionsState {
    bool enable_interface_id = 1;
    bool enable_remote_id = 2;
}

message OptionsConfig {
    bool enable_interface_id = 1;
    bool enable_remote_id = 2;
}

message Dhcpv6Options {
    OptionsConfig config = 1;
    OptionsState state = 2;
}

message Dhcpv6State {
    bool enable_relay_agent = 1;
}

message Dhcpv6Config {
    bool enable_relay_agent = 1;
}

message RelayAgentDhcpv6 {
    Dhcpv6Config config = 1;
    Dhcpv6State state = 2;
    Dhcpv6Options options = 3;
    Dhcpv6Interfaces interfaces = 4;
}

message AgentInformationOptionState {
    bool enable = 1;
    string circuit_id = 2;
    string remote_id = 3;
    string sent_circuit_id = 4;
    string sent_remote_id = 5;
}

message AgentInformationOptionConfig {
    bool enable = 1;
    string circuit_id = 2;
    string remote_id = 3;
}

message InterfaceAgentInformationOption {
    AgentInformationOptionConfig config = 1;
    AgentInformationOptionState state = 2;
}

message StateCounters {
    uint64 total_dropped = 1;
    uint64 invalid_opcode = 2;
    uint64 invalid_options = 3;
    uint64 bootrequest_received = 4;
    uint64 dhcp_decline_received = 5;
    uint64 dhcp_discover_received = 6;
    uint64 dhcp_inform_received = 7;
    uint64 dhcp_release_received = 8;
    uint64 dhcp_request_received = 9;
    uint64 bootrequest_sent = 10;
    uint64 bootreply_sent = 11;
    uint64 dhcp_offer_sent = 12;
    uint64 dhcp_ack_sent = 13;
    uint64 dhcp_nack_sent = 14;
}

message InterfacesInterface {
    InterfaceConfig config = 1;
    InterfaceState state = 2;
    InterfaceAgentInformationOption agent_information_option = 3;
}

message DhcpInterfaces {
    repeated InterfacesInterface interface = 1;
}

message AgentInformationOptionState {
    bool enable = 1;
}

message AgentInformationOptionConfig {
    bool enable = 1;
}

message DhcpAgentInformationOption {
    AgentInformationOptionConfig config = 1;
    AgentInformationOptionState state = 2;
}

message DhcpState {
    bool enable_relay_agent = 1;
}

message DhcpConfig {
    bool enable_relay_agent = 1;
}

message RelayAgentDhcp {
    DhcpConfig config = 1;
    DhcpState state = 2;
    DhcpAgentInformationOption agent_information_option = 3;
    DhcpInterfaces interfaces = 4;
}

message Relay-agent {
    RelayAgentDhcp dhcp = 1;
    RelayAgentDhcpv6 dhcpv6 = 2;
}

