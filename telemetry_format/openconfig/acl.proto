//
// Copyright 2016 YUNQI TECH Inc. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

syntax = "proto3";

package proto.acl;

// Paths:
// acl

message InterfacesInterface {
    string id = 1;
}

message AclInterfaces {
    repeated InterfacesInterface interface = 1;
}

message AclEntryActions {
    string forwarding_action = 1;
}

message AclEntryTransport {
    repeated uint32 source_port = 1;
    repeated uint32 destination_port = 2;
    repeated string tcp_flags = 3;
}

enum IpVersion {
    UNKNOWN = 0;
    IPV4 = 1;
    IPV6 = 2;
}

message AclEntryIp {
    IpVersion ip_version = 1;
    repeated string source_ip_address = 2;
    repeated string source_ip_flow_label = 3;
    repeated uint32 destination_ip_address = 4;
    repeated uint32 destination_ip_flow_label = 5;
    repeated uint32 dscp = 6;
    repeated uint32 protocol = 7;
    repeated uint32 hop_limit = 8;
}

message AclEntryL2 {
    repeated bytes source_mac = 1;
    repeated bytes source_mac_mask = 2;
    repeated bytes destination_mac = 3;
    repeated bytes destination_mac_mask = 4;
    repeated uint32 ethertype = 5;
}

message AclEntryState {
    uint32 sequence_id = 1;
    string description = 2;
    uint64 matched_packets = 3;
    uint64 matched_octets = 4;
}

message AclEntriesAclEntry {
    AclEntryState state = 1;
    AclEntryL2 l2 = 2;
    AclEntryIp ip = 3;
    AclEntryTransport transport = 4;
    AclEntryActions actions = 5;
}

message AclSetAclEntries {
    repeated AclEntriesAclEntry acl_entry = 1;
}

message AclSetsAclSet {
    string name = 1;
    string description = 2;
    AclSetAclEntries acl_entries = 3;
    AclInterfaces input_interfaces = 4;
    AclInterfaces output_interfaces = 5;
}

message AclAclSets {
    repeated AclSetsAclSet acl_set = 1;
}

message Acl {
    string counter_capability = 1;
    AclAclSets acl_sets = 2;
    AclInterfaces interfaces = 3;
}

