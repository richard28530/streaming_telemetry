//
// Copyright 2016 YUNQI TECH Inc. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

syntax = "proto3";

//import "ietf-inet-types.proto";
//import "openconfig-interfaces.proto";
//import "openconfig-policy-types.proto";
//import "openconfig-extensions.proto";

package proto.routing_policy;

// Paths:

message MatchCondition {
    string as_path = 1;
    string as_path_set = 2;
    string community = 3;
    string community_set = 4;
    string external_type = 5;
    string localpref = 6;
    string med = 7;
    uint32 metric = 8;
    string network4 = 9;
    string network4_list = 10;
    string nexthop4 = 11;
    string origin = 12;
    string prefix_length4 = 13;
    string protocol = 14;
    string tag = 15;
}

message RoutingPolicyMatchCondition {
    MatchCondition originate = 1;
    MatchCondition designate = 2;
}

message RoutingPolicySubPolicy {
    string name = 1;
    RoutingPolicyMatchCondition match_condition = 2;
    RoutingPolicyAction action = 3;
}

message RoutingPolicyAction {
    bool accept = 1;
    string aggregate_brief_mode = 2;
    string aggregate_prefix_len = 3;
    string as_path_expand = 4;
    string as_path_prepend = 5;
    string community = 6;
    string community_add = 7;
    string community_del = 8;
    string external_type = 9;
    string localpref = 10;
    string med = 11;
    string med_remove = 12;
    uint32 metric = 13;
    string nexthop4 = 14;
    string nexthop4_var = 15;
    string origin = 16;
    string tag = 17;
}

message RoutingPolicySubPolicySet {
    repeated RoutingPolicySubPolicy policy = 2;
}

message RoutingPolicyPolicyDefinitions {
    string name = 1;
    RoutingPolicySubPolicySet sub_policy = 2;
    RoutingPolicyAction action = 3;
}

message AsPathSet {
    string element = 1;
}

message DefinedAsPathSet {
    string name = 1;
    repeated AsPathSet as_path = 2;
}

message CommunitySet {
    string element = 1;
}

message DefinedCommunitySet {
    string name = 1;
    repeated CommunitySet community = 2;
}

message NetworkSet {
    string network = 1;
}

message DefinedNetworkSet {
    string name = 1;
    repeated NetworkSet network = 2;
}

message RoutingPolicyDefinedSets {
    DefinedAsPathSet as_path_sets = 1;
    DefinedCommunitySet community_sets = 2;
    DefinedNetworkSet network_sets = 3;
}

message RoutingPolicy {
    RoutingPolicyDefinedSets defined_sets = 1;
    RoutingPolicyPolicyDefinitions policy_definitions = 2;
}

